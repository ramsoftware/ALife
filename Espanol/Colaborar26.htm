<!DOCTYPE HTML>
<html lang="es">
<head>
    <meta charset="utf-8">
	<link href="../Estilo.css" rel="stylesheet" type="text/css" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
          integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
            crossorigin="anonymous"></script>
    <title>Programa 26</title>
</head>
<body>
<div class="container-fluid">
    <div class="row">
        <div class="col">
            <header>
                <p><a href="../index.html">Ir a Inicio</a></p>
                <h1>Colaboración entre individuos</h1>
                <h2>Programa 26. Red neuronal + convertir una entrada y salida en múltiples.</h2>
            </header>
            <p>Dada una serie de datos X,Y (X no se repite), se busca la expresión Y = F(X) que genere esa serie de datos</p>
			<p>Ya se ha trabajado en este problema haciendo uso de algoritmos genéticos y redes neuronales. Y se ha seguido usualmente este camino:</p>
			<p>1. Leer la lista de datos X,Y</p>
			<p>2. Se normalizan esos datos, es decir, quedan entre 0 y 1.</p>
			<p>3. Se envía al proceso los valores X y Y normalizados en busca de la expresión que los explique</p>
			<p>¿Qué cambia para esta ocasión y que tenga que ver con el capítulo de colaboración?</p>
			<p>Ahora los valores de X y Y normalizados se expresan como una suma y cada sumando se vuelve entrada y salida. Ejemplo:<p>
			<p>Valor X = 0.8215 se convierte a 0.8 + 0.02 + 0.001 + 0.0005</p>
			<p>Valor Y = 0.1764 se convierte a 0.1 + 0.07 + 0.006 + 0.0004</p>
			<p>Y cada sumando es una entrada y salida como se ve en la imagen:</p>
			<img src="../Imagen/colaborar26a.jpg"></img>
			<p>Se hicieron varias pruebas, configurando el perceptrón multicapa (un tipo de red neuronal) con dos capas ocultas de 5 neuronas cada una y teniendo en cuenta que tiene varias entradas y salidas.<p>
			<p>A continuación las imágenes:</p>
			<p><img src="../Imagen/Colaborar26b.png"></img><p>
			<p><img src="../Imagen/Colaborar26c.png"></img><p>
			<p><img src="../Imagen/Colaborar26d.png"></img><p>
			<p><img src="../Imagen/Colaborar26e.png"></img><p>
			<p><img src="../Imagen/Colaborar26f.png"></img><p>
			<p>Es bastante notable como logra en algunas curvas, encontrar el patrón. Falla donde los datos presentan muchos valles y crestas juntos</p>
			<p>Se harán múltiples pruebas para determinar si esta estrategia es mejor que enviar sólo una entrada y una sola salida con el número completo.</p>
			<p>Descargue el programa en C# <a href="../Download/colaborar26.zip">dando clic aquí</a></p>
        </div>
    </div>
</div>
</body>
</html>
