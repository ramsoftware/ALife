<!DOCTYPE HTML>
<html lang="es">
<head>
    <meta charset="utf-8">
	<link href="../Estilo.css" rel="stylesheet" type="text/css" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
          integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
            crossorigin="anonymous"></script>
    <title>Colaboración entre individuos. Programa 27.</title>
</head>
<body>
<div class="container-fluid">
    <div class="row">
        <div class="col">
            <header>
                <p><a href="../index.html">Ir a Inicio</a></p>
                <h1>Colaboración entre individuos</h1>
                <h2>Programa 27. Comparativa entre dos redes neuronales: Una sola entrada-salida vs Múltiples entradas-salidas</h2>
            </header>
            <p>Dada una serie de datos (X, Y) donde X no se repite, se busca la expresión Y = F(X) que genere esa serie de datos.</p>
			<p>El algoritmo es el siguiente:</p>
			<p>1. Generar una ecuación al azar del tipo Y=F(X).</p>
			<p>2. Con esa ecuación generar una serie de valores (X, Y).</p>
			<p>3. Se normalizan los valores (X, Y).</p>
			<p>4. Se toma el valor X y el valor Y, y se dividen en sumatorias, por ejemplo:</p>
			<p>Valor X = 0.8215 se convierte a 0.8 + 0.02 + 0.001 + 0.0005</p>
			<p>Valor Y = 0.1764 se convierte a 0.1 + 0.07 + 0.006 + 0.0004</p>
			<p>Y cada sumando es una entrada y salida como se ve en la imagen:</p>
			<img src="../Imagen/colaborar26a.jpg"></img>
			<p>5. Se envía para entrenamiento a un primer perceptrón multicapa (dos capas ocultas cada una de 8 neuronas) esos valores X en suma y, Y en suma, es decir, múltiples entradas y múltiples salidas.</p>
			<p>6. Se envía para entrenamiento a un segundo perceptrón multicapa (dos capas ocultas cada una de 8 neuronas) esos valores (X, Y) no convertidos en suma, es decir, de una sola entrada X, y una sola salida Y.<p>
			<p>7. Se compara la aproximación que arroja ambos perceptrones, el que más se aproxime a cero es el mejor</p>
			<p>Se hicieron 125 pruebas. Y se obtuvieron los siguientes resultados:</p>
			<table>
			<tr>
				<th>Aproxima múltiples entradas-salidas </th>
				<th>Aproximación una entrada-salida</th>
			</tr>
<tr><td>2,22868144</td><td>2,202224568</td></tr>
<tr><td>29,0565581</td><td>29,10918799</td></tr>
<tr><td>0,502814132</td><td>0,45067045</td></tr>
<tr><td>4,046671152</td><td>12,08689106</td></tr>
<tr><td>26,51695886</td><td>26,64989753</td></tr>
<tr><td>23,78704308</td><td>24,54352531</td></tr>
<tr><td>1,027201803</td><td>0,53122769</td></tr>
<tr><td>1,838044032</td><td>1,579597839</td></tr>
<tr><td>2,4201994</td><td>1,61283111</td></tr>
<tr><td>29,48796268</td><td>29,47073618</td></tr>
<tr><td>5,791611299</td><td>2,859582268</td></tr>
<tr><td>25,87666521</td><td>24,56843495</td></tr>
<tr><td>11,64681911</td><td>17,68327662</td></tr>
<tr><td>1,994324444</td><td>1,848527124</td></tr>
<tr><td>2,846983417</td><td>2,749026843</td></tr>
<tr><td>9,774774291</td><td>16,52045278</td></tr>
<tr><td>29,26051803</td><td>29,23161098</td></tr>
<tr><td>1,248795514</td><td>0,72427718</td></tr>
<tr><td>31,55169489</td><td>30,25910494</td></tr>
<tr><td>3,078163865</td><td>2,887417298</td></tr>
<tr><td>6,285409782</td><td>6,102289781</td></tr>
<tr><td>20,72412939</td><td>20,89337094</td></tr>
<tr><td>1,407429058</td><td>1,110041661</td></tr>
<tr><td>1,271170356</td><td>0,621168276</td></tr>
<tr><td>1,848357104</td><td>0,609813062</td></tr>
<tr><td>1,436204381</td><td>1,427853386</td></tr>
<tr><td>0,833980859</td><td>0,507796137</td></tr>
<tr><td>1,07393188</td><td>0,987293893</td></tr>
<tr><td>14,92736026</td><td>14,67198885</td></tr>
<tr><td>4,722348745</td><td>4,545818565</td></tr>
<tr><td>2,557752327</td><td>2,969238414</td></tr>
<tr><td>1,307749667</td><td>1,36267139</td></tr>
<tr><td>2,105933055</td><td>2,025590473</td></tr>
<tr><td>0,89588997</td><td>0,690801393</td></tr>
<tr><td>27,52156501</td><td>27,27781667</td></tr>
<tr><td>1,459975764</td><td>0,756813007</td></tr>
<tr><td>3,701198108</td><td>0,545165207</td></tr>
<tr><td>1,1692307</td><td>1,227934795</td></tr>
<tr><td>3,863165224</td><td>27,83955694</td></tr>
<tr><td>29,60598209</td><td>29,41123677</td></tr>
<tr><td>0,476022778</td><td>0,444157009</td></tr>
<tr><td>27,83605542</td><td>28,20662131</td></tr>
<tr><td>29,48726252</td><td>29,29727948</td></tr>
<tr><td>3,038281148</td><td>3,035425564</td></tr>
<tr><td>2,024276034</td><td>2,000066963</td></tr>
<tr><td>2,507925583</td><td>2,245486524</td></tr>
<tr><td>29,76943514</td><td>30,34725735</td></tr>
<tr><td>1,844704661</td><td>1,794558467</td></tr>
<tr><td>1,9990065</td><td>0,494232252</td></tr>
<tr><td>1,906823124</td><td>0,66361312</td></tr>
<tr><td>29,99061803</td><td>29,96162233</td></tr>
<tr><td>3,266003757</td><td>3,184228235</td></tr>
<tr><td>2,62528838</td><td>3,33389031</td></tr>
<tr><td>2,926349773</td><td>3,052202887</td></tr>
<tr><td>2,12743037</td><td>2,093173274</td></tr>
<tr><td>27,40106893</td><td>28,63722354</td></tr>
<tr><td>3,684920568</td><td>3,649847733</td></tr>
<tr><td>6,4092867</td><td>6,472049695</td></tr>
<tr><td>1,823718589</td><td>1,861190619</td></tr>
<tr><td>11,79969452</td><td>26,59399987</td></tr>
<tr><td>2,052471677</td><td>0,620323016</td></tr>
<tr><td>5,146398915</td><td>25,55441326</td></tr>
<tr><td>11,08465182</td><td>27,1138065</td></tr>
<tr><td>1,95211811</td><td>1,028082962</td></tr>
<tr><td>2,143845924</td><td>0,827141464</td></tr>
<tr><td>28,52657738</td><td>28,34400914</td></tr>
<tr><td>1,792325131</td><td>0,609890343</td></tr>
<tr><td>1,955009896</td><td>0,936693555</td></tr>
<tr><td>1,033694011</td><td>0,860021395</td></tr>
<tr><td>1,118394705</td><td>0,545584034</td></tr>
<tr><td>1,294947302</td><td>0,564150549</td></tr>
<tr><td>2,430434217</td><td>2,096273558</td></tr>
<tr><td>23,7241025</td><td>26,26858937</td></tr>
<tr><td>3,612949488</td><td>30,45119158</td></tr>
<tr><td>28,63996542</td><td>28,58433186</td></tr>
<tr><td>1,132057872</td><td>0,980884859</td></tr>
<tr><td>0,849088921</td><td>0,931148476</td></tr>
<tr><td>3,626383221</td><td>28,98154962</td></tr>
<tr><td>1,777187765</td><td>1,367503473</td></tr>
<tr><td>15,46605227</td><td>20,03147164</td></tr>
<tr><td>3,020934018</td><td>2,489700882</td></tr>
<tr><td>26,58164851</td><td>27,53192688</td></tr>
<tr><td>1,699724973</td><td>0,550904045</td></tr>
<tr><td>3,482573923</td><td>3,308542061</td></tr>
<tr><td>15,38651595</td><td>15,40612966</td></tr>
<tr><td>2,027459215</td><td>0,412104789</td></tr>
<tr><td>3,219544094</td><td>3,898526993</td></tr>
<tr><td>23,50847383</td><td>26,53241535</td></tr>
<tr><td>2,709593673</td><td>4,466284402</td></tr>
<tr><td>4,142771588</td><td>24,96661786</td></tr>
<tr><td>3,386435479</td><td>1,55326743</td></tr>
<tr><td>1,3887042</td><td>0,742840436</td></tr>
<tr><td>28,29062103</td><td>28,32953342</td></tr>
<tr><td>1,570468793</td><td>1,602019971</td></tr>
<tr><td>5,478243122</td><td>5,318698323</td></tr>
<tr><td>2,038536182</td><td>0,656475639</td></tr>
<tr><td>7,455190952</td><td>30,28606323</td></tr>
<tr><td>1,725900666</td><td>0,608444798</td></tr>
<tr><td>2,665118151</td><td>3,313457064</td></tr>
<tr><td>2,184895499</td><td>1,443370143</td></tr>
<tr><td>4,587612816</td><td>29,81444738</td></tr>
<tr><td>1,742282274</td><td>1,623412639</td></tr>
<tr><td>2,007512582</td><td>1,531086638</td></tr>
<tr><td>3,35068411</td><td>16,52346595</td></tr>
<tr><td>0,63619993</td><td>0,596002403</td></tr>
<tr><td>2,557730712</td><td>2,106263908</td></tr>
<tr><td>4,755343272</td><td>4,754131763</td></tr>
<tr><td>2,257500745</td><td>0,810935042</td></tr>
<tr><td>1,952890399</td><td>2,002729022</td></tr>
<tr><td>1,308742971</td><td>0,524209886</td></tr>
<tr><td>0,972767463</td><td>0,601560066</td></tr>
<tr><td>7,708453731</td><td>15,6760444</td></tr>
<tr><td>3,835557705</td><td>3,873124298</td></tr>
<tr><td>26,80659398</td><td>26,33312232</td></tr>
<tr><td>5,984241506</td><td>5,943049393</td></tr>
<tr><td>1,0530161</td><td>0,95061154</td></tr>
<tr><td>0,935061339</td><td>0,873462355</td></tr>
<tr><td>29,01563916</td><td>29,10080262</td></tr>
<tr><td>2,187720627</td><td>2,037741724</td></tr>
<tr><td>28,45118634</td><td>28,45094548</td></tr>
<tr><td>3,849103747</td><td>1,031984277</td></tr>
<tr><td>28,63120365</td><td>29,94480239</td></tr>
<tr><td>2,714865238</td><td>0,457948077</td></tr>
<tr><td>24,06277862</td><td>23,62032808</td></tr>
			</table>
			<br><p>Los resultados son interesantes porque la estrategia de una entrada-salida fue más eficaz, en 81 de las 125 pruebas logró mejor aproximación.</p>
			<p>Pero curiosamente, cuando el perceptrón de entrada-salida tiene peor aproximación que el perceptrón entradas-salidas, la diferencia era bien notable. Ver los siguientes casos:</p>
			<table>
			<tr>
				<th>Aproxima múltiples entradas-salidas </th>
				<th>Aproximación una entrada-salida</th>
			</tr>
<tr><td>4,046671152</td><td>12,08689106</td></tr>
<tr><td>11,64681911</td><td>17,68327662</td></tr>
<tr><td>3,863165224</td><td>27,83955694</td></tr>
<tr><td>11,79969452</td><td>26,59399987</td></tr>
<tr><td>5,146398915</td><td>25,55441326</td></tr>
<tr><td>3,612949488</td><td>30,45119158</td></tr>
<tr><td>4,142771588</td><td>24,96661786</td></tr>
<tr><td>7,455190952</td><td>30,28606323</td></tr>
<tr><td>4,587612816</td><td>29,81444738</td></tr>
			</table>
			<br><p>Se hizo la siguiente operación, si el perceptrón entradas-salidas le ganaba al perceptrón entrada-salida, se acumula en cuánto perdió este último; caso contrario se acumula cuánto perdió el perceptrón entradas-salidas. El resultado fue:</p>
			<table>
			<tr>
				<th>Pérdida acumulada perceptrón múltiples entradas-salidas </th>
				<th>Pérdida acumulada una entrada-salida</th>
			</tr>
			<tr><td>47,34227392</td><td>258,827636</td></tr>
			</table>
			<br><p>El perceptrón entrada-salida frecuentemente es mejor en aproximación que el perceptrón entradas-salidas. Pero cuando este primero falla, su error es más grande en comparación con el segundo. Si es por confiabilidad me quedaría con el perceptrón entradas-salidas (que pierde por muy poco).
			<p>Descargue el programa en C# <a href="../Download/colaborar27.zip">dando clic aquí</a></p>
        </div>
    </div>
</div>
</body>
</html>
